class Arraystack:
    
    def __init__(self):
        self.data = []
        
    def __repr__(self):
        if self.isEmpty():
            return "Stack is empty!"
        message = ""
        
        for idx, item in enumerate(reversed(self.data)):
            message += str(item)
            if idx != self.size() - 1:
                message += '\n'
                
        return message
    
    def size(self):
        return len(self.data)
    
    def isEmpty(self):
        return self.size() == 0
    
    def peek(self):
        if self.size() == 0:
            return None
        
        return self.data[-1]
    
    def push(self, item):
        self.data.append(item)
        return True
    
    def pop(self):
        if self.isEmpty():
            return None
        
        return self.data.pop()
    
def CheckingBracket(expr):
    match = {
        ')': '(',
        '}': '{',
        ']': '['
    }
    s = Arraystack()
    
    for c in expr:
        if c in "({[":
            s.push(c)
        elif c in match:
            if s.isEmpty():
                return False
            else:
                t = s.pop()
                if t != match[c]:
                    return False
        
    return s.isEmpty()
